(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[14],{eI63:function(e,n,t){"use strict";t.r(n);var d=t("2w0b"),o=t.n(d);n["default"]=function(){return o.a.createElement("section",{dangerouslySetInnerHTML:{__html:'<html><head></head><body><h2 id="event"><a class="anchor" href="#event"></a>Event</h2>\n<p><code>capturing</code> and <code>bubbling</code></p>\n<p><em>IE only support event <code>budding</code></em></p>\n<p>first <code>captured</code> until reaches the target element and then <code>buddles</code> up again</p>\n<h3 id="on-event"><a class="anchor" href="#on-event"></a>on event</h3>\n<p>only fire in <code>budding</code>, bind only one listener once</p>\n<h3 id="addeventlistener"><a class="anchor" href="#addeventlistener"></a>addEventListener</h3>\n<p>element.addEventListener(type, listener[ , useCapture])</p>\n<h4>useCapture</h4>\n<p>addEventListener support both <code>capturing</code> and <code>budding</code></p>\n<p><code>options</code>, <code>Boolean</code>, default <code>false</code></p>\n<h4>event.target &amp; event.currentTarget</h4>\n<p><code>currentTarget</code>: element which event handler attached<br />\n<code>target</code>: the element which event handler fired</p>\n</body></html>'},className:"markdown-body"})}}}]);