(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[23],{KtN6:function(s,a,n){"use strict";n.r(a);var e=n("q1tI"),l=n.n(e);a["default"]=function(){return l.a.createElement("section",{dangerouslySetInnerHTML:{__html:'<html><head></head><body><h2 id="memory-leak"><a class="anchor" href="#memory-leak"></a>Memory Leak</h2>\n<h3 id="garbage-collected"><a class="anchor" href="#garbage-collected"></a>Garbage Collected</h3>\n<p><code>reference counting</code>, when the count reaches zero</p>\n<h3 id="accidental-global-variables"><a class="anchor" href="#accidental-global-variables"></a>Accidental Global variables</h3>\n<pre><code class="language-JavaScript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">foo</span> (<span class="hljs-params"></span>) </span>{\n    bar = <span class="hljs-string">&apos;this is a hidden global variables&apos;</span>\n}\n</code></pre>\n<p><em>in fact, it&#x2019;s:</em></p>\n<pre><code class="language-JavaScript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">foo</span> (<span class="hljs-params"></span>) </span>{\n    <span class="hljs-built_in">window</span>.bar = <span class="hljs-string">&apos;this is a hidden global variables&apos;</span>\n}\n</code></pre>\n<p>to avoid, add <code>use strict</code></p>\n<h3 id="forgotten-timers-or-callbacks"><a class="anchor" href="#forgotten-timers-or-callbacks"></a>Forgotten timers or callbacks</h3>\n<p><code>setInterval</code>, <code>on</code>, <code>addEventListener</code></p>\n<h3 id="out-of-dom-references"><a class="anchor" href="#out-of-dom-references"></a>Out of DOM references</h3>\n<pre><code class="language-JavaScript"><span class="hljs-keyword">const</span> elements = {\n    <span class="hljs-attr">button</span>: <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&apos;button&apos;</span>)\n}\n\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">removeButton</span> (<span class="hljs-params"></span>) </span>{\n    <span class="hljs-comment">// direct child of body</span>\n    <span class="hljs-built_in">document</span>.body.removeChild(<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&apos;button&apos;</span>))\n    <span class="hljs-comment">// after remove, still a reference to #button</span>\n    <span class="hljs-comment">// the button element is still in memory</span>\n    <span class="hljs-comment">// and can not be collected by GC</span>\n}\n</code></pre>\n<h3 id="closures"><a class="anchor" href="#closures"></a>Closures</h3>\n</body></html>'},className:"markdown-body"})}}}]);