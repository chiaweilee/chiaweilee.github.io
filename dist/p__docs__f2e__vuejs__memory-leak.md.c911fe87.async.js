(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[31],{rmWi:function(e,n,o){"use strict";o.r(n);var d=o("2w0b"),r=o.n(d);n["default"]=function(){return r.a.createElement("section",{dangerouslySetInnerHTML:{__html:'<html><head></head><body><h2 id="memory-leak"><a class="anchor" href="#memory-leak"></a>Memory Leak</h2>\n<h3 id="dombom-event-in-render"><a class="anchor" href="#dombom-event-in-render"></a>DOM/BOM Event in Render()</h3>\n<p>avoid use DOM/BOM Event if using <code>render()</code></p>\n<h3 id="addeventlistener"><a class="anchor" href="#addeventlistener"></a>addEventListener</h3>\n<p><code>beforeDestroy</code> call <code>removeEventListener</code>, and <code>delete</code> <code>callback</code>/set props <code>null</code>/<code>undefined</code></p>\n<p>avoid use <code>anonymous function</code> to callback</p>\n<h3 id="on-and-off"><a class="anchor" href="#on-and-off"></a>$on and $off</h3>\n<h3 id="closure"><a class="anchor" href="#closure"></a>closure</h3>\n<h2 id="closure"><a class="anchor" href="#closure"></a>Closure</h2>\n<pre><code class="language-vue.js">let closure = 1\nexport default {\n    data () {\n        return {\n            closure: closure\n        }\n    },\n    mounted () {\n        console.log(closure)\n        console.log(this.closure)\n        closure += 1\n    }\n}\n</code></pre>\n<p><em>every time mounted</em></p>\n<pre><code>// result: 1 1, 2 2, 3 3 ...\n</code></pre>\n</body></html>'},className:"markdown-body"})}}}]);