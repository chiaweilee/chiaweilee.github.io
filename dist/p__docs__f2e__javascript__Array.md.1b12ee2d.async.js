(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[9],{"k/WX":function(s,a,n){"use strict";n.r(a);var e=n("2w0b"),r=n.n(e);a["default"]=function(){return r.a.createElement("section",{dangerouslySetInnerHTML:{__html:'<html><head></head><body><h2 id="array"><a class="anchor" href="#array"></a>Array</h2>\n<h3 id="arrayfrom"><a class="anchor" href="#arrayfrom"></a>Array.from()</h3>\n<p><em>not support IE</em></p>\n<p>create a new, <code>shallow-copied</code> Array instance from an array-like or iterable object.</p>\n<pre><code class="language-JavaScript"><span class="hljs-built_in">Array</span>.from(<span class="hljs-string">&apos;foo&apos;</span>)\n</code></pre>\n<pre><code>// result: [&apos;f&apos;, &apos;o&apos;, &apos;o&apos;]\n</code></pre>\n<pre><code class="language-JavaScript"></code></pre>\n<h3 id="prototypepop"><a class="anchor" href="#prototypepop"></a>prototype.pop()</h3>\n<p>delete last element, and <code>return this element</code></p>\n<h3 id="prototypeshift"><a class="anchor" href="#prototypeshift"></a>prototype.shift()</h3>\n<p>delete first element, and <code>return this element</code></p>\n<h3 id="prototypepush"><a class="anchor" href="#prototypepush"></a>prototype.push()</h3>\n<p>add element(s) at end, and <code>return new length</code></p>\n<h3 id="prototypeunshift"><a class="anchor" href="#prototypeunshift"></a>prototype.unshift()</h3>\n<p>add element(s) at start, and <code>return new length</code></p>\n<h3 id="prototypesplice"><a class="anchor" href="#prototypesplice"></a>prototype.splice()</h3>\n<p><code>array.splice(start[, deleteCount[, item1[, item2[, ...]]]])</code></p>\n<h3 id="prototypeorder"><a class="anchor" href="#prototypeorder"></a>prototype.order()</h3>\n<pre><code class="language-JavaScript">[<span class="hljs-number">1</span>, <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">6</span>].sort(<span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> a - b)\n[<span class="hljs-number">1</span>, <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">6</span>].sort(<span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> b - a)\n</code></pre>\n<p>argument a start at [1]<br />\nargumemt b start at [0]</p>\n<p>e.g: (5, 1) =&gt; (4, 5) =&gt; (2, 4)</p>\n<pre><code>// result: [1, 2, 3, 4, 5, 6] [6, 5, 4, 3, 2, 1]\n</code></pre>\n<h3 id="vue-observer-array"><a class="anchor" href="#vue-observer-array"></a>Vue Observer array</h3>\n<pre><code class="language-JavaScript"><span class="hljs-keyword">const</span> arrayProto = <span class="hljs-built_in">Array</span>.prototype\n<span class="hljs-keyword">const</span> arrayMethods = <span class="hljs-built_in">Object</span>.create(arrayProto)\n<span class="hljs-keyword">const</span> method = <span class="hljs-string">&apos;push&apos;</span>\n<span class="hljs-keyword">const</span> original = arrayProto[method]\n\n<span class="hljs-built_in">Object</span>.defineProperty(arrayMethods, method, {\n    <span class="hljs-attr">value</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">...args</span>) </span>{\n        <span class="hljs-keyword">return</span> original.apply(<span class="hljs-keyword">this</span>, args)\n    },\n    <span class="hljs-attr">enumerable</span>: <span class="hljs-literal">false</span>,\n    <span class="hljs-attr">writable</span>: <span class="hljs-literal">true</span>,\n    <span class="hljs-attr">configurable</span>: <span class="hljs-literal">true</span>\n  })\n</code></pre>\n</body></html>'},className:"markdown-body"})}}}]);