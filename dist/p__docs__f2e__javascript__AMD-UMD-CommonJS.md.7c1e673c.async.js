(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[8],{"35oH":function(s,a,n){"use strict";n.r(a);var p=n("2w0b"),l=n.n(p);a["default"]=function(){return l.a.createElement("section",{dangerouslySetInnerHTML:{__html:'<html><head></head><body><h2 id><a class="anchor" href="#"></a></h2>\n<h3 id="amd"><a class="anchor" href="#amd"></a>AMD</h3>\n<p><code>Asynchronous</code> Module Definition (AMD)</p>\n<pre><code class="language-JavaScript"><span class="hljs-comment">// filename: foo.js</span>\ndefine([<span class="hljs-string">&apos;jquery&apos;</span>], <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">$</span>) </span>{\n  <span class="hljs-comment">// methods</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">myFunc</span>(<span class="hljs-params"></span>)</span>{}\n  <span class="hljs-comment">// exposed public methods</span>\n  <span class="hljs-keyword">return</span> myFunc\n});\n</code></pre>\n<pre><code class="language-JavaScript"><span class="hljs-comment">//  filename: foo.js</span>\ndefine([<span class="hljs-string">&apos;jquery&apos;</span>, <span class="hljs-string">&apos;underscore&apos;</span>], <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">$, _</span>) </span>{\n  <span class="hljs-comment">//  methods</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">a</span>(<span class="hljs-params"></span>)</span>{}  <span class="hljs-comment">//  private because it&apos;s not returned (see below)</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">b</span>(<span class="hljs-params"></span>)</span>{}  <span class="hljs-comment">//  public because it&apos;s returned</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">c</span>(<span class="hljs-params"></span>)</span>{}  <span class="hljs-comment">//  public because it&apos;s returned</span>\n  <span class="hljs-comment">//  exposed public methods</span>\n  <span class="hljs-keyword">return</span> {\n  <span class="hljs-attr">b</span>: b,\n  <span class="hljs-attr">c</span>: c\n  }\n});\n</code></pre>\n<h3 id="common-js"><a class="anchor" href="#common-js"></a>Common JS</h3>\n<pre><code class="language-JavaScript"><span class="hljs-comment">//  filename: foo.js</span>\n<span class="hljs-keyword">var</span> $ = <span class="hljs-built_in">require</span>(<span class="hljs-string">&apos;jquery&apos;</span>);\n<span class="hljs-keyword">var</span> _ = <span class="hljs-built_in">require</span>(<span class="hljs-string">&apos;underscore&apos;</span>);\n<span class="hljs-comment">//  methods</span>\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">a</span>(<span class="hljs-params"></span>)</span>{}  <span class="hljs-comment">//  private because it&apos;s omitted from module.exports (see below)</span>\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">b</span>(<span class="hljs-params"></span>)</span>{}  <span class="hljs-comment">//  public because it&apos;s defined in module.exports</span>\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">c</span>(<span class="hljs-params"></span>)</span>{}  <span class="hljs-comment">//  public because it&apos;s defined in module.exports</span>\n<span class="hljs-comment">//  exposed public methods</span>\n<span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-attr">b</span>: b,\n  <span class="hljs-attr">c</span>: c\n}\n</code></pre>\n<h3 id="umd"><a class="anchor" href="#umd"></a>UMD</h3>\n<p><code>Universal</code> Module Definition</p>\n<pre><code class="language-JavaScript">(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">global, factory</span>) </span>{\n  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> <span class="hljs-keyword">export</span> === <span class="hljs-string">&apos;object &amp;&amp; typeof module !== &apos;</span><span class="hljs-literal">undefined</span><span class="hljs-string">&apos;) {\n    // AMD\n    defined(factory)\n  } else if (typeof define === &apos;</span><span class="hljs-function"><span class="hljs-keyword">function</span>&apos; &amp;&amp; <span class="hljs-title">define</span>.<span class="hljs-title">amd</span>) </span>{\n    <span class="hljs-comment">// Node, CommonJS-like</span>\n    <span class="hljs-built_in">module</span>.exports = factory()\n  } <span class="hljs-keyword">else</span> {\n    <span class="hljs-comment">// Broswer globals (root is window)</span>\n    global.vue = factory()\n  }\n})(<span class="hljs-keyword">this</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{\n  <span class="hljs-comment">// vue</span>\n})\n</code></pre>\n</body></html>'},className:"markdown-body"})}}}]);