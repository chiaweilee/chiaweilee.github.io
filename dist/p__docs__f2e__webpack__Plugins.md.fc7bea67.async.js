(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[34],{"4rc4":function(s,a,n){"use strict";n.r(a);var l=n("2w0b"),p=n.n(l);a["default"]=function(){return p.a.createElement("section",{dangerouslySetInnerHTML:{__html:'<html><head></head><body><h2 id="plugins"><a class="anchor" href="#plugins"></a>Plugins</h2>\n<h3 id="bannerplugin"><a class="anchor" href="#bannerplugin"></a>BannerPlugin</h3>\n<pre><code class="language-JavaScript"><span class="hljs-keyword">new</span> webpack.BannerPlugin(banner);\n<span class="hljs-comment">// or</span>\n<span class="hljs-keyword">new</span> webpack.BannerPlugin(options);\n</code></pre>\n<pre><code class="language-JavaScript">{\n  <span class="hljs-attr">banner</span>: string | <span class="hljs-function"><span class="hljs-keyword">function</span>, // <span class="hljs-title">the</span> <span class="hljs-title">banner</span> <span class="hljs-title">as</span> <span class="hljs-title">string</span> <span class="hljs-title">or</span> <span class="hljs-title">function</span>, <span class="hljs-title">it</span> <span class="hljs-title">will</span> <span class="hljs-title">be</span> <span class="hljs-title">wrapped</span> <span class="hljs-title">in</span> <span class="hljs-title">a</span> <span class="hljs-title">comment</span>\n  <span class="hljs-title">raw</span>: <span class="hljs-title">boolean</span>, // <span class="hljs-title">if</span> <span class="hljs-title">true</span>, <span class="hljs-title">banner</span> <span class="hljs-title">will</span> <span class="hljs-title">not</span> <span class="hljs-title">be</span> <span class="hljs-title">wrapped</span> <span class="hljs-title">in</span> <span class="hljs-title">a</span> <span class="hljs-title">comment</span>\n  <span class="hljs-title">entryOnly</span>: <span class="hljs-title">boolean</span>, // <span class="hljs-title">if</span> <span class="hljs-title">true</span>, <span class="hljs-title">the</span> <span class="hljs-title">banner</span> <span class="hljs-title">will</span> <span class="hljs-title">only</span> <span class="hljs-title">be</span> <span class="hljs-title">added</span> <span class="hljs-title">to</span> <span class="hljs-title">the</span> <span class="hljs-title">entry</span> <span class="hljs-title">chunks</span>\n  <span class="hljs-title">test</span>: <span class="hljs-title">string</span> | <span class="hljs-title">RegExp</span> | <span class="hljs-title">Array</span>,\n  <span class="hljs-title">include</span>: <span class="hljs-title">string</span> | <span class="hljs-title">RegExp</span> | <span class="hljs-title">Array</span>,\n  <span class="hljs-title">exclude</span>: <span class="hljs-title">string</span> | <span class="hljs-title">RegExp</span> | <span class="hljs-title">Array</span>,\n}\n</span></code></pre>\n<pre><code class="language-JavaScript"><span class="hljs-comment">// string</span>\n<span class="hljs-keyword">new</span> webpack.BannerPlugin({\n  <span class="hljs-attr">banner</span>: <span class="hljs-string">&apos;hello world&apos;</span>\n});\n\n<span class="hljs-comment">// function</span>\n<span class="hljs-keyword">new</span> webpack.BannerPlugin({\n  <span class="hljs-attr">banner</span>: <span class="hljs-function">(<span class="hljs-params">yourVariable</span>) =&gt;</span> { <span class="hljs-keyword">return</span> <span class="hljs-string">`yourVariable: <span class="hljs-subst">${yourVariable}</span>`</span>; }\n});\n</code></pre>\n<h3 id="contextreplacementplugin"><a class="anchor" href="#contextreplacementplugin"></a>ContextReplacementPlugin</h3>\n<pre><code class="language-JavaScript"><span class="hljs-keyword">new</span> webpack.ContextReplacementPlugin(\n  <span class="hljs-regexp">/moment[/\\]locale$/</span>,\n  /de|fr|hu/\n);\n</code></pre>\n<h3 id="defineplugin"><a class="anchor" href="#defineplugin"></a>DefinePlugin</h3>\n<pre><code class="language-JavaScript"><span class="hljs-keyword">new</span> webpack.DefinePlugin({\n    <span class="hljs-attr">TWO</span>: <span class="hljs-string">&apos;1+1&apos;</span>,\n    <span class="hljs-string">&apos;typeof window&apos;</span>: <span class="hljs-built_in">JSON</span>.stringify(<span class="hljs-string">&apos;object&apos;</span>),\n    <span class="hljs-string">&apos;process.env.NODE_ENV&apos;</span>: <span class="hljs-built_in">JSON</span>.stringify(process.env.NODE_ENV)\n})\n</code></pre>\n<h3 id="environmentplugin"><a class="anchor" href="#environmentplugin"></a>EnvironmentPlugin</h3>\n<pre><code class="language-JavaScript"><span class="hljs-keyword">new</span> webpack.EnvironmentPlugin([<span class="hljs-string">&apos;NODE_ENV&apos;</span>, <span class="hljs-string">&apos;DEBUG&apos;</span>]);\n</code></pre>\n<p>equivalent to <code>DefinePlugin</code></p>\n<pre><code class="language-JavaScript"><span class="hljs-keyword">new</span> webpack.DefinePlugin({\n  <span class="hljs-string">&apos;process.env.NODE_ENV&apos;</span>: <span class="hljs-built_in">JSON</span>.stringify(process.env.NODE_ENV),\n  <span class="hljs-string">&apos;process.env.DEBUG&apos;</span>: <span class="hljs-built_in">JSON</span>.stringify(process.env.DEBUG)\n});\n</code></pre>\n<p><em>Variables coming from process.env are always <code>strings</code>.</em></p>\n<h3 id="ignoreplugin"><a class="anchor" href="#ignoreplugin"></a>IgnorePlugin</h3>\n<pre><code class="language-JavaScript"><span class="hljs-keyword">new</span> webpack.IgnorePlugin(requestRegExp, [contextRegExp]);\n</code></pre>\n<pre><code class="language-JavaScript"><span class="hljs-keyword">new</span> webpack.IgnorePlugin(<span class="hljs-regexp">/^./locale$/</span>, /moment$/);\n</code></pre>\n<p><em>&#x2026;which means &quot;any require statement matching &#x2018;./locale&#x2019; from any directories ending with &#x2018;moment&#x2019; will be ignored.</em></p>\n<h3 id="provideplugin"><a class="anchor" href="#provideplugin"></a>ProvidePlugin</h3>\n<pre><code class="language-JavaScript"><span class="hljs-keyword">new</span> webpack.ProvidePlugin({\n  <span class="hljs-attr">$</span>: <span class="hljs-string">&apos;jquery&apos;</span>,\n  <span class="hljs-attr">jQuery</span>: <span class="hljs-string">&apos;jquery&apos;</span>\n});\n</code></pre>\n<pre><code class="language-JavaScript"><span class="hljs-keyword">new</span> webpack.ProvidePlugin({\n  <span class="hljs-attr">_map</span>: [<span class="hljs-string">&apos;lodash&apos;</span>, <span class="hljs-string">&apos;map&apos;</span>]\n});\n</code></pre>\n</body></html>'},className:"markdown-body"})}}}]);