(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[19],{"qg+W":function(s,a,n){"use strict";n.r(a);var p=n("ZZRV"),e=n.n(p);a["default"]=function(){return e.a.createElement("section",{dangerouslySetInnerHTML:{__html:'<html><head></head><body><h2 id="string"><a class="anchor" href="#string"></a>String</h2>\n<pre><code class="language-JavaScript"><span class="hljs-string">&apos;Hello&apos;</span>.chatAt(<span class="hljs-number">1</span>) <span class="hljs-comment">// &apos;e&apos;</span>\n<span class="hljs-string">&apos;Hello&apos;</span>[<span class="hljs-number">1</span>] <span class="hljs-comment">// &apos;e&apos;</span>\n</code></pre>\n<h3 id="template-strings"><a class="anchor" href="#template-strings"></a>Template strings</h3>\n<pre><code class="language-JavaScript"><span class="hljs-string">&apos;&apos;&apos;</span> === <span class="hljs-string">`&apos;`</span> <span class="hljs-comment">// true</span>\n</code></pre>\n<pre><code class="language-JavaScript"><span class="hljs-keyword">const</span> s = <span class="hljs-string">&apos;This is a very long string which needs           to wrap across multiple lines because           otherwise my code is unreadable.&apos;</span>\n</code></pre>\n<h3 id="prototypeconcat"><a class="anchor" href="#prototypeconcat"></a>prototype.concat()</h3>\n<pre><code class="language-JavaScript"><span class="hljs-string">&apos;Hello&apos;</span>.concat(<span class="hljs-string">&apos; &apos;</span>, <span class="hljs-string">&apos;World&apos;</span>)\n</code></pre>\n<p><code>return new string</code></p>\n<h3 id="prototypelastindexof"><a class="anchor" href="#prototypelastindexof"></a>prototype.lastIndexOf()</h3>\n<pre><code class="language-JavaScript"><span class="hljs-string">&apos;canal&apos;</span>.lastIndexOf(<span class="hljs-string">&apos;a&apos;</span>);     <span class="hljs-comment">// returns 3</span>\n<span class="hljs-string">&apos;canal&apos;</span>.lastIndexOf(<span class="hljs-string">&apos;a&apos;</span>, <span class="hljs-number">2</span>);  <span class="hljs-comment">// returns 1</span>\n</code></pre>\n</body></html>'},className:"markdown-body"})}}}]);