(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[37],{a0w1:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return r});t("q1tI");var a=t("7ljp");function o(){return o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},o.apply(this,arguments)}const i={},p="wrapper";function r({components:e,...n}){return Object(a["a"])(p,o({},i,n,{components:e,mdxType:"MDXLayout"}),Object(a["a"])("h2",null,"v-if with v-for"),Object(a["a"])("p",null,"when they exist on same node, ",Object(a["a"])("inlineCode",{parentName:"p"},"v-for")," has a higher priority than ",Object(a["a"])("inlineCode",{parentName:"p"},"v-if"),".\nThat means ",Object(a["a"])("inlineCode",{parentName:"p"},"v-if")," can be useful when you want to render nodes for only ",Object(a["a"])("inlineCode",{parentName:"p"},"some")," items."),Object(a["a"])("p",null,Object(a["a"])("em",{parentName:"p"},"Instead, your intent is to skip execution of the loop,")," you can place ",Object(a["a"])("inlineCode",{parentName:"p"},"v-if")," on a wrapper or ",Object(a["a"])("inlineCode",{parentName:"p"},"<template>"),"."),Object(a["a"])("h3",null,"key"),Object(a["a"])("p",null,"you need to provide a unique ",Object(a["a"])("inlineCode",{parentName:"p"},"key")," for each item, ",Object(a["a"])("inlineCode",{parentName:"p"},"key")," would be the unique id of each item."))}r.isMDXComponent=!0}}]);