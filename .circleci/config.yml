version: 2.1

orbs:
  node: circleci/node@1.1.6

defaults: &defaults
  working_directory: ~/project/app
  executor:
    name: node/default

jobs:
  run_install:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - v1-{{ .Branch }}-
            - v1-
      - run: yarn
      - save_cache:
          key: v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules/
      - persist_to_workspace:
          root: ~/project
          paths:
            - app
  run_build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: auto build
          command: |
            commit=`git show --format="%s" --no-patch`
            if [ "$commit" != "deploy: ðŸ¤– auto build" ]; then
              npm run build
            fi
      - run:
          name: auto deploy
          command: |
            diffInfo=`git diff --stat`
            if [ "$diffInfo" != "" ]; then
              if [ -d /home/ ]; then
                mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
                git config --global user.email "$EMAIL"
                git config --global user.name "$NAME"
                git add -f home
                git commit -m "deploy: ðŸ¤– auto build"
                git push
              fi
            fi
  run_lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run: npm run lint
  run_test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run: npm test

workflows:
  build_deploy:
    jobs:
      - run_install:
          filters:
            branches:
              only:
                - master
      - run_build:
          filters:
            branches:
              only:
                - master
          requires:
            - run_install
      - run_lint:
          requires:
            - run_install
      - run_test:
          requires:
            - run_install
